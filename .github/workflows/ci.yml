# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 8
      uses: actions/setup-java@v3
      with:
        java-version: '8'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn -B package --file pom.xml

    - name: Generate JaCoCo badge
      id: jacoco
      uses: cicirello/jacoco-badge-generator@v2
      with:
        badges-directory: badges
        generate-branches-badge: true
        generate-summary: true

    - name: Log coverage percentages to workflow output
      run: |
        echo "coverage = ${{ steps.jacoco.outputs.coverage }}"
        echo "branches = ${{ steps.jacoco.outputs.branches }}"
        if: ${{ steps.jacoco.outputs.coverage > 50 }}
          echo "Coverage is good"

    #- uses: actions/checkout@v2
    #  name: Check out code

    - uses: mr-smithers-excellent/docker-build-push@v5
      name: Build & push Docker image
      with:
        image: khannaraj/sampleapplication
        tags: v1, latest
        registry: docker.io
        dockerfile: Dockerfile
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Scan image
      uses: anchore/scan-action@v3
      id: scan
      with:
        image: "khannaraj/sampleapplication:latest"
        fail-build: false
        #severity-cutoff: critical
        severity-cutoff: medium
        acs-report-enable: true

    - name: upload Anchore scan SARIF report
      uses: github/codeql-action/upload-sarif@v2
      with:
        sarif_file: ${{ steps.scan.outputs.sarif }}

    - name: Inspect ANCHORE SARIF report
      run: cat ${{ steps.scan.outputs.sarif }}
    
    - name: Archive code coverage results
      uses: actions/upload-artifact@v3
      with:
        name: scan-sarif-report
        path: ${{ steps.scan.outputs.sarif }}
          
    #- uses: stefanzweifel/git-auto-commit-action@v4
    #  with:
    #    commit_message: Add SARIF report
        
    #- name: Run Trivy vulnerability scanner
    #  uses: aquasecurity/trivy-action@master
    #  id: scan2
    #  with:
    #    image-ref: 'khannaraj/sampleapplication:latest'
    #    #format: 'table'
    #    exit-code: '1'
    #    ignore-unfixed: true
    #    vuln-type: 'os,library'
    #    severity: 'CRITICAL,HIGH'
    #    format: 'sarif'
    #    #output: 'trivy-results.sarif'

    #- name: Inspect TRIVY SARIF report
    #  run: cat ./trivy-results.sarif
        
    #- name: "Check Path and Java Home"
    #  run: echo "PATH is $PATH || $JAVA_HOME"
      
    #- name: "List Java Permission"
    #  run: ls -alrt $JAVA_HOME/bin/java
              
    - name: SonarQube Scan
      uses: sonarsource/sonarqube-scan-action@master
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: https://sonarcloud.io
        
    - name: Release
      id: release
      uses: rymndhng/release-on-push-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GIT_HUB_TOKEN }}
      with:
        bump_version_scheme: minor
        #bump_version_scheme: major
        tag_prefix: v
          
    - name: Check Output Parameters Tags
      run: |
        echo "Got tag name ${{ steps.release.outputs.tag_name }}"
        echo "Got release version ${{ steps.release.outputs.version }}"
        
